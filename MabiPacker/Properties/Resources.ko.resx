<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_About" xml:space="preserve">
    <value>MabiPacker 대해</value>
  </data>
  <data name="Button_Confirm" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="Button_Continue" xml:space="preserve">
    <value>계속</value>
  </data>
  <data name="Button_Exit" xml:space="preserve">
    <value>종료</value>
  </data>
  <data name="Button_Pack" xml:space="preserve">
    <value>풀고</value>
  </data>
  <data name="Button_Unpack" xml:space="preserve">
    <value>포장</value>
  </data>
  <data name="Button_ViewContent" xml:space="preserve">
    <value>내용물 확인</value>
  </data>
  <data name="Button_Visit" xml:space="preserve">
    <value>사이트로 이동</value>
  </data>
  <data name="Label_Level" xml:space="preserve">
    <value>압축 수준 :</value>
  </data>
  <data name="Label_PackDistination" xml:space="preserve">
    <value>팩하고 싶은 data 디렉토리 :</value>
  </data>
  <data name="Label_PackFileName" xml:space="preserve">
    <value>저장 파일 이름 :</value>
  </data>
  <data name="Label_UnpackDistination" xml:space="preserve">
    <value>파일의 대상 :</value>
  </data>
  <data name="Label_UnpackFile" xml:space="preserve">
    <value>풀고 싶은 * .pack 파일을 선택 :</value>
  </data>
  <data name="Label_Version" xml:space="preserve">
    <value>버전 :</value>
  </data>
  <data name="String_Finish" xml:space="preserve">
    <value>완료했습니다.</value>
  </data>
  <data name="String_Initializing" xml:space="preserve">
    <value>초기화 중 …</value>
  </data>
  <data name="String_PackFileDesciption" xml:space="preserve">
    <value>Mabinogi 패키지 파일</value>
  </data>
  <data name="String_Packing" xml:space="preserve">
    <value>팩하고 있습니다 …</value>
  </data>
  <data name="String_SetPackDistination" xml:space="preserve">
    <value>팩하고 싶은 디렉토리를 선택하십시오.</value>
  </data>
  <data name="String_SetPackFileName" xml:space="preserve">
    <value>저장할 파일 이름을 지정하십시오.</value>
  </data>
  <data name="String_TarminateMessageContent" xml:space="preserve">
    <value>프로그램을 종료합니다.</value>
  </data>
  <data name="String_TarminateMessageContentOutput" xml:space="preserve">
    <value>프로그램을 종료합니다.
이 문제의 내부 정보를 볼 수 있나요?</value>
  </data>
  <data name="String_TarminateMessageMain" xml:space="preserve">
    <value>문제가 발생했기 때문에이 프로그램이 중지되었습니다.</value>
  </data>
  <data name="String_Unpacking" xml:space="preserve">
    <value>풀고 있습니다 …</value>
  </data>
  <data name="String_SetExportTo" xml:space="preserve">
    <value>내보내기 위치를 지정하십시오.</value>
  </data>
  <data name="Button_Export" xml:space="preserve">
    <value>내보내기</value>
  </data>
  <data name="String_Interrupted" xml:space="preserve">
    <value>작업을 중단했습니다.</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="String_Hint" xml:space="preserve">
    <value>버전 지정 클라이언트 버전보다 큰 값을 넣어주세요.
또한 생성 된 * .pack 파일은 부팅시 검사에서 삭제되는 것을 막기 위해 '읽기 전용'플래그를 지정해야합니다.</value>
  </data>
  <data name="Button_Hint" xml:space="preserve">
    <value>팁</value>
  </data>
</root>